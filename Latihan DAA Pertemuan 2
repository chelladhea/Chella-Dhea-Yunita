Loading...
DAA2.ipynb
DAA2.ipynb_
[ ]
import numpy as np

[ ]
print(np.__version__)
1.19.5
[ ]
print("Hello, World!")
print("Nama saya Chella Dhea Yunita")
print("NIM saya 2020071011")
Hello, World!
Nama saya Chella Dhea Yunita
NIM saya 2020071011
[ ]
if 5 > 2:
  print("Five is greater than two!")
Five is greater than two!
[ ]
x = 5
y = "John"
print(x)
print(y)
5
John
[ ]
x = 4
x = "Sally"
print(x)
Sally
[ ]
def getfirst(myList):
  return myList[0]

getfirst([1,2,3])
1
[ ]
getfirst([1,2,3,4,5,6,7,8,9,10])
1
[ ]
## Notasi Big 0
def getsecond(myList):
  return myList[1]
print(getsecond([1,2,3]))
2
[ ]
def getSum(myList):
    sum = 0
    for item in myList:
        sum = sum+item
    return sum
getSum([1,2,3,4])
10
[ ]
def getKali(myList):
    kali = 1
    for item in myList:
        kali = kali*item
    return kali
getKali([1,2,3,4])
24
[ ]
def getBagi(myList):
    bagi = 80
    for item in myList:
        bagi = bagi/item
    return bagi
getBagi([20,2])
2.0
[ ]
def getSum(myList):
    sum = 0
    for row in myList:
        for item in row:
            sum += item
    return sum
getSum([[1,2,3],[4,5,6]])
21
[ ]
def getBagi(myList):
    bagi = 500
    for row in myList:
        for item in row:
            bagi /= item
    return bagi
getBagi([[25],[2]])
10.0
[ ]
def getKurang(myList):
    kurang = 80
    for row in myList:
        for item in row:
            kurang -= item
    return kurang
getKurang([[40],[20]])
20
[ ]
def searchBinary(myList,item):
    first = 0
    last = len(myList)-1
    foundFlag = False
    while(first<=last and not foundFlag):
       mid = (first + last)//2
       if myList[mid] == item :
           foundFlag = True
       else:
           if item < myList[mid]:
               last = mid - 1
           else:
               first = mid + 1
    return foundFlag
[ ]
searchBinary([8,9,10,100,1000,2000,3000], 10)
True
